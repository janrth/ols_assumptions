import pandas as pd
import numpy as np
import pytest
import sys
from statsmodels.tools.tools import add_constant
sys.path.insert(0, '../olscheck')
import ols_assumptions_check

@pytest.fixture
def setup_data_cooks_dist_line():
    data = pd.DataFrame({
                'x1': [2, 0, 1, 1, 1],
                'x2': [-1, 2, .5, 2.5, 3],
                'residuals': [0, 0, -1, 0, 0]
    })
    return data

leverage = np.array([0.82352941, 0.21960784, 0.14313725, 0.34705882, 0.46666667])

expected_values = {
    .5: (np.array([0.001     , 0.01778631, 0.03457263, 0.05135894, 0.06814526,
        0.08493157, 0.10171789, 0.1185042 , 0.13529052, 0.15207683,
        0.16886314, 0.18564946, 0.20243577, 0.21922209, 0.2360084 ,
        0.25279472, 0.26958103, 0.28636735, 0.30315366, 0.31993998,
        0.33672629, 0.3535126 , 0.37029892, 0.38708523, 0.40387155,
        0.42065786, 0.43744418, 0.45423049, 0.47101681, 0.48780312,
        0.50458943, 0.52137575, 0.53816206, 0.55494838, 0.57173469,
        0.58852101, 0.60530732, 0.62209364, 0.63887995, 0.65566627,
        0.67245258, 0.68923889, 0.70602521, 0.72281152, 0.73959784,
        0.75638415, 0.77317047, 0.78995678, 0.8067431 , 0.82352941]), 
           np.array([31.60696126,  7.43121809,  5.28437466,  4.2977675 ,  3.6979096 ,
         3.28240528,  2.9717188 ,  2.72736491,  2.52814183,  2.36127585,
         2.21854802,  2.09439624,  1.98490261,  1.88721597,  1.79920462,
         1.71923787,  1.64604368,  1.57861276,  1.51613231,  1.45793906,
         1.40348534,  1.35231411,  1.30404025,  1.25833634,  1.21492172,
         1.17355393,  1.13402203,  1.09614118,  1.05974832,  1.02469868,
         0.99086287,  0.95812448,  0.92637806,  0.89552745,  0.86548426,
         0.83616666,  0.80749822,  0.77940686,  0.75182398,  0.72468349,
         0.69792099,  0.67147282,  0.64527515,  0.61926289,  0.59336849,
         0.56752051,  0.5416418 ,  0.5156472 ,  0.48944047,  0.46291005])),
    1: (np.array([0.001     , 0.01778631, 0.03457263, 0.05135894, 0.06814526,
        0.08493157, 0.10171789, 0.1185042 , 0.13529052, 0.15207683,
        0.16886314, 0.18564946, 0.20243577, 0.21922209, 0.2360084 ,
        0.25279472, 0.26958103, 0.28636735, 0.30315366, 0.31993998,
        0.33672629, 0.3535126 , 0.37029892, 0.38708523, 0.40387155,
        0.42065786, 0.43744418, 0.45423049, 0.47101681, 0.48780312,
        0.50458943, 0.52137575, 0.53816206, 0.55494838, 0.57173469,
        0.58852101, 0.60530732, 0.62209364, 0.63887995, 0.65566627,
        0.67245258, 0.68923889, 0.70602521, 0.72281152, 0.73959784,
        0.75638415, 0.77317047, 0.78995678, 0.8067431 , 0.82352941]), 
            np.array([44.69899328, 10.50932941,  7.47323431,  6.07796109,  5.22963391,
         4.64202207,  4.20264502,  3.85707645,  3.57533247,  3.33934833,
         3.1375007 ,  2.96192357,  2.80707618,  2.66892643,  2.54445958,
         2.43136952,  2.3278573 ,  2.23249558,  2.14413487,  2.06183718,
         1.984828  ,  1.91246096,  1.84419141,  1.77955632,  1.71815877,
         1.65965589,  1.60374934,  1.55017772,  1.49871044,  1.44914277,
         1.40129171,  1.35499263,  1.31009642,  1.26646706,  1.22397958,
         1.18251824,  1.14197493,  1.10224775,  1.06323966,  1.02485722,
         0.98700933,  0.94960597,  0.91255687,  0.87576997,  0.83914976,
         0.8025952 ,  0.76599718,  0.72923527,  0.69217336,  0.65465367]))
}

# Parametrizes the test to run with both constant=True and constant=False
@pytest.mark.parametrize("factor", [.5, 1])
def test_cooks_dist_line(setup_data_cooks_dist_line, factor):
    ols_checker = ols_assumptions_check.OlsCheck()
    x,y = ols_checker._cooks_dist_line(factor=factor, features=['x1','x2'], leverage=leverage) 
    
    expected_x, expected_y = expected_values[factor]

    assert np.allclose(x, expected_x, atol=1e-8)
    assert np.allclose(y, expected_y, atol=1e-8)